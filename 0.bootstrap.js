(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "../pkg/ising_webcanvas.js":
/*!*********************************!*\
  !*** ../pkg/ising_webcanvas.js ***!
  \*********************************/
/*! exports provided: __wbg_set_wasm, IsingModell, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ising_webcanvas_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ising_webcanvas_bg.wasm */ \"../pkg/ising_webcanvas_bg.wasm\");\n/* harmony import */ var _ising_webcanvas_bg_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ising_webcanvas_bg.js */ \"../pkg/ising_webcanvas_bg.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_set_wasm\", function() { return _ising_webcanvas_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_set_wasm\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"IsingModell\", function() { return _ising_webcanvas_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"IsingModell\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return _ising_webcanvas_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_throw\"]; });\n\n\n\nObject(_ising_webcanvas_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_set_wasm\"])(_ising_webcanvas_bg_wasm__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\n//# sourceURL=webpack:///../pkg/ising_webcanvas.js?");

/***/ }),

/***/ "../pkg/ising_webcanvas_bg.js":
/*!************************************!*\
  !*** ../pkg/ising_webcanvas_bg.js ***!
  \************************************/
/*! exports provided: __wbg_set_wasm, IsingModell, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_set_wasm\", function() { return __wbg_set_wasm; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IsingModell\", function() { return IsingModell; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\nlet wasm;\nfunction __wbg_set_wasm(val) {\n    wasm = val;\n}\n\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n/**\n*/\nclass IsingModell {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(IsingModell.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_isingmodell_free(ptr);\n    }\n    /**\n    * @param {number} size\n    * @param {number} b\n    * @param {number} t\n    * @param {number} i\n    * @param {number} up\n    * @param {bigint} seed\n    * @returns {IsingModell}\n    */\n    static new(size, b, t, i, up, seed) {\n        const ret = wasm.isingmodell_new(size, b, t, i, up, seed);\n        return IsingModell.__wrap(ret);\n    }\n    /**\n    * @param {number} mc_steps\n    * @returns {number}\n    */\n    run(mc_steps) {\n        const ret = wasm.isingmodell_run(this.__wbg_ptr, mc_steps);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    grid_ptr() {\n        const ret = wasm.isingmodell_grid_ptr(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    changed_ptr() {\n        const ret = wasm.isingmodell_changed_ptr(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    get_M() {\n        const ret = wasm.isingmodell_get_M(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    get_M_avg() {\n        const ret = wasm.isingmodell_get_M_avg(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    get_U() {\n        const ret = wasm.isingmodell_get_U(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    get_U_avg() {\n        const ret = wasm.isingmodell_get_U_avg(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    get_T() {\n        const ret = wasm.isingmodell_get_T(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    get_B() {\n        const ret = wasm.isingmodell_get_B(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    get_S() {\n        const ret = wasm.isingmodell_get_S(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {bigint}\n    */\n    get_steps() {\n        const ret = wasm.isingmodell_get_steps(this.__wbg_ptr);\n        return BigInt.asUintN(64, ret);\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @returns {number}\n    */\n    get_Spin_at(x, y) {\n        const ret = wasm.isingmodell_get_Spin_at(this.__wbg_ptr, x, y);\n        return ret;\n    }\n    /**\n    * @param {number} newT\n    */\n    set_T(newT) {\n        wasm.isingmodell_set_T(this.__wbg_ptr, newT);\n    }\n    /**\n    * @param {number} newB\n    */\n    set_B(newB) {\n        wasm.isingmodell_set_B(this.__wbg_ptr, newB);\n    }\n    /**\n    */\n    reset_data() {\n        wasm.isingmodell_reset_data(this.__wbg_ptr);\n    }\n    /**\n    */\n    reset_avgs() {\n        wasm.isingmodell_reset_avgs(this.__wbg_ptr);\n    }\n    /**\n    */\n    magnetize() {\n        wasm.isingmodell_magnetize(this.__wbg_ptr);\n    }\n}\n\nfunction __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../www/node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))\n\n//# sourceURL=webpack:///../pkg/ising_webcanvas_bg.js?");

/***/ }),

/***/ "../pkg/ising_webcanvas_bg.wasm":
/*!**************************************!*\
  !*** ../pkg/ising_webcanvas_bg.wasm ***!
  \**************************************/
/*! exports provided: memory, __wbg_isingmodell_free, isingmodell_new, isingmodell_run, isingmodell_grid_ptr, isingmodell_changed_ptr, isingmodell_get_M, isingmodell_get_M_avg, isingmodell_get_U, isingmodell_get_U_avg, isingmodell_get_T, isingmodell_get_B, isingmodell_get_S, isingmodell_get_steps, isingmodell_get_Spin_at, isingmodell_set_T, isingmodell_set_B, isingmodell_reset_data, isingmodell_reset_avgs, isingmodell_magnetize */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./ising_webcanvas_bg.js */ \"../pkg/ising_webcanvas_bg.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///../pkg/ising_webcanvas_bg.wasm?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var ising_webcanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ising-webcanvas */ \"../pkg/ising_webcanvas.js\");\n/* harmony import */ var ising_webcanvas_ising_webcanvas_bg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ising-webcanvas/ising_webcanvas_bg */ \"../pkg/ising_webcanvas_bg.wasm\");\n\n\n\nvar canvasSize;\nvar S = 128;                  // Ising Gridsize\nvar B = 0.0;                  // External magnetic field\nvar I = 1.0;                  // Coupling Constant\nvar T = 0;                    // Temperature\nvar Up = 0.5;                 // Probability of newly generated Spin to be up\nvar Seed = BigInt(123456789); // Seed for the RNG Generator\nvar ising = ising_webcanvas__WEBPACK_IMPORTED_MODULE_0__[\"IsingModell\"].new(S, B, T, I, Up, Seed);\nconst canvas = document.getElementById(\"grid\");\n\nvar stop = true;\nvar reset_on_t_change = true;\n\nfunction init() {\n    // Setting all Event listeners up\n    canvasSize = document.getElementById('grid').width;\n\n    const temp_input = document.getElementById(\"temp_input\");\n    const b_input = document.getElementById(\"bfield_input\");\n    temp_input.addEventListener(\"change\", function() { update_temp(\"temp_input\"); });\n    temp_input.addEventListener(\"input\", function() { update_temp(\"temp_input\"); });\n    b_input.addEventListener(\"change\", function() { update_bfield(\"bfield_input\"); });\n    b_input.addEventListener(\"input\", function() { update_bfield(\"bfield_input\"); });\n\n    const temp_input_label = document.getElementById(\"temp_input_label\");\n    const bfield_input_label = document.getElementById(\"bfield_input_label\");\n    temp_input_label.addEventListener(\"keyup\", function(event) { update_temp(\"temp_input_label\", event); });\n    bfield_input_label.addEventListener(\"keyup\", function(event) { update_bfield(\"bfield_input_label\", event); });\n    update_temp(\"temp_input\");\n    update_bfield(\"bfield_input\");\n\n    const grid_change = document.getElementById(\"gridsize\");\n    grid_change.addEventListener(\"change\", update_grid);\n\n    const start_btn = document.getElementById(\"start_stop\");\n    const step_btn = document.getElementById(\"step\");\n    const reset_btn = document.getElementById(\"reset_data\");\n    const magnetize = document.getElementById(\"magnetize\");\n    const reset_grid = document.getElementById(\"reset_grid\");\n    start_btn.addEventListener(\"click\", start_stop);\n    step_btn.addEventListener(\"click\", step_simulation);\n    reset_btn.addEventListener(\"click\", reset_data);\n    magnetize.addEventListener(\"click\", magnetize_grid);\n    reset_grid.addEventListener(\"click\", reset_model);\n\n    const t_change = document.getElementById(\"t_change_reset\");\n    t_change.addEventListener(\"change\", t_change_reset);\n\n    drawEntireGrid();\n    update_values();\n    startAnimation();\n}\n\nfunction reset() {\n    drawEntireGrid();\n    var steps = document.getElementById(\"mc_steps\");\n    var m_avg = document.getElementById(\"m_avg\");\n    var u_avg = document.getElementById(\"u_avg\");\n    steps.innerHTML = \"Steps = 0\";\n    m_avg.innerHTML = `M_avg = 0\\tM = ${parseFloat(ising.get_M()).toFixed(2)}`;\n    u_avg.innerHTML = `U_avg = 0\\tU = ${parseFloat(ising.get_U()).toFixed(2)}`;\n}\n\nfunction startAnimation() {\n    renderLoop();\n}\n\nfunction renderLoop() {\n    if (stop) {\n        return;\n    }\n    const changed_len = ising.run(1);\n    update_values();\n    drawChangedPixels(changed_len);\n    requestAnimationFrame(renderLoop);\n}\n\nfunction drawEntireGrid() {\n    let gridsize = ising.get_S();\n    const gridPtr = ising.grid_ptr();\n    const grid = new Int8Array(ising_webcanvas_ising_webcanvas_bg__WEBPACK_IMPORTED_MODULE_1__[\"memory\"].buffer, gridPtr, gridsize * gridsize);\n    let ctx = canvas.getContext(\"2d\");\n    var size = canvasSize/gridsize;\n    for (let y = 0; y < gridsize; y++) {\n        for (let x = 0; x < gridsize; x++) {\n            // Use S (Gridsize of the Ising Model) to determine how big the ImageData should be\n            // if canvas is 512px and we have S = 64 then each \"Ising Pixel\"\n            // Has to be 8x8 in size, so just draw a rectangle of that size\n            let spin = grid[y * gridsize + x];\n            ctx.fillStyle = spin == -1 ? \"black\" : \"white\";\n            ctx.fillRect(x * size, y * size, size, size);\n        }\n    }\n}\n\nfunction drawChangedPixels(changed_len) {\n    // Get a pointer to the grid an access the changed spins\n    // in the memory directly instead of calling a helper function\n    // Should make code a bit faster (?)\n    let gridsize = ising.get_S();\n    const gridPtr = ising.grid_ptr();\n    const grid = new Int8Array(ising_webcanvas_ising_webcanvas_bg__WEBPACK_IMPORTED_MODULE_1__[\"memory\"].buffer, gridPtr, gridsize * gridsize);\n    const changedPtr = ising.changed_ptr();\n    const changed = new Uint32Array(ising_webcanvas_ising_webcanvas_bg__WEBPACK_IMPORTED_MODULE_1__[\"memory\"].buffer, changedPtr, changed_len);\n    let ctx = canvas.getContext(\"2d\");\n    var size = canvasSize/gridsize;\n    for (let i = 0; i < changed_len; i += 2) {\n        let idx = changed[i + 1] * gridsize + changed[i];\n        let spin = grid[idx];\n        ctx.fillStyle = spin == -1 ? \"black\" : \"white\";\n        ctx.fillRect(changed[i] * size, changed[i + 1] * size, size, size);\n    }\n}\n\nfunction update_temp(id, event) {\n    var val;\n    var exp;\n    if (id == \"temp_input\") {\n        var inputTemp = parseFloat(document.getElementById('temp_input').value);\n        var min = document.getElementById('temp_input').min;\n        val = inputTemp <= min ? 0 : Math.pow(10, inputTemp);\n        exp = inputTemp;\n    }\n    else if (id == \"temp_input_label\") {\n        if (event.key != \"Enter\") return;\n        var inputTemp = parseFloat(document.getElementById('temp_input_label').value);\n        if (inputTemp < 0) {\n            document.getElementById('temp_input_label').value = (0).toFixed(5);\n            return;\n        }\n        exp = Math.log(inputTemp) / Math.log(10);\n        val = inputTemp;\n    }\n    if (inputTemp > Math.pow(10, document.getElementById('temp_input').max)) { \n        document.getElementById('temp_input_label').value = parseFloat(Math.pow(10, document.getElementById('temp_input').max)).toFixed(5);\n        return; \n    }\n\n    ising.set_T(val);\n    if (reset_on_t_change) {\n        ising.reset_avgs();\n    }\n\n    document.getElementById('temp_input_label').value = val.toFixed(5);\n    document.getElementById('temp_input').value = exp.toFixed(5);\n}\n\nfunction update_bfield(id, event) {\n    if (id == \"bfield_input\") {\n        var inputB = parseFloat(document.getElementById('bfield_input').value); \n    }\n    else if (id == \"bfield_input_label\") {\n        if (event.key != \"Enter\") { return };\n        var inputB = parseFloat(document.getElementById('bfield_input_label').value);\n    }\n    if (inputB > document.getElementById('bfield_input').max) { \n        document.getElementById('bfield_input_label').value = parseFloat(document.getElementById('bfield_input').value).toFixed(5);\n        return; \n    }\n    ising.set_B(inputB);\n\n    document.getElementById('bfield_input_label').value = inputB.toFixed(5);\n    document.getElementById('bfield_input').value = inputB.toFixed(5);}\n\nfunction update_values() {\n    var steps = document.getElementById(\"mc_steps\");\n    var m_avg = document.getElementById(\"m_avg\");\n    var u_avg = document.getElementById(\"u_avg\");\n\n    steps.innerHTML = `Steps = ${ising.get_steps()}`;\n    m_avg.innerHTML = `M_avg = ${Math.abs(ising.get_M_avg().toFixed(2))}\\tM = ${parseFloat(ising.get_M()).toFixed(2)}`;\n    u_avg.innerHTML = `U_avg = ${parseFloat(ising.get_U_avg()).toFixed(2)}\\tU = ${parseFloat(ising.get_U()).toFixed(2)}`;\n}\n\nfunction update_grid() {\n    var newB = ising.get_B();\n    var newT = ising.get_T();\n    var newS = parseInt(document.getElementById('gridsize').value);\n    ising = ising_webcanvas__WEBPACK_IMPORTED_MODULE_0__[\"IsingModell\"].new(newS, newB, newT, 1, Up, Seed);\n    drawEntireGrid();\n}\n\nfunction start_stop() {\n    stop = !stop;\n    if (!stop) {\n\n        document.getElementById(\"start_stop\").value = \"Stop\";\n        startAnimation();\n    }\n    else {\n        document.getElementById(\"start_stop\").value = \"Start\";\n    }\n}\n\nfunction step_simulation() {\n    ising.run(1);\n    update_values();\n    drawEntireGrid();\n}\n\nfunction reset_data() {\n    ising.reset_data();\n    reset();\n}\n\nfunction reset_model() {\n    var newB = ising.get_B();\n    var newT = ising.get_T();\n    var newS = parseInt(document.getElementById('gridsize').value);\n\n    ising = ising_webcanvas__WEBPACK_IMPORTED_MODULE_0__[\"IsingModell\"].new(newS, newB, newT, 1, 0.5, BigInt(Math.floor(Math.random() * 100000)));\n    drawEntireGrid();\n    update_values();\n}\n\nfunction magnetize_grid() {\n    ising.magnetize();\n    drawEntireGrid();\n}\n\nfunction t_change_reset() {\n    console.log(\"Test\");\n    const checkbox = document.querySelector(\"#t_change_reset\");\n    console.log(checkbox.checked);\n    if (checkbox.checked) {\n        reset_on_t_change = true;\n    }\n    else {\n        reset_on_t_change = false;\n    }\n}\n\nwindow.onload = init();\n\n\n//# sourceURL=webpack:///./index.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/harmony-module.js":
/*!*******************************************!*\
  !*** (webpack)/buildin/harmony-module.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack:///(webpack)/buildin/harmony-module.js?");

/***/ })

}]);